* {
  box-sizing: border-box;
}

:root {
  --accent-color: #ff6f00;
  --light-color: #ffffff;
  --dark-color: #020f59;
}

body {
  margin: 0;
  background: var(--dark-color);
  color: var(--light-color);
  font-family: europa, sans-serif;
  min-height: 100vh;
}

.a {
  color: var(--accent-color);
}

.button {
  display: inline-block;
  background-color: var(--accent-color);
  color: var(--light-color);
  font: inherit;
  border: 0;
  border-radius: 3px;
  padding: 0.5rem 1rem;
  cursor: pointer;
}

.button:focus {
  outline: 0;
}

.h1, .h2, .h3 {
  margin: 0;
}

.h1 {
  font-size: 4rem;
  line-height: 0.75;
  letter-spacing: 0.5rem;
}

.h2, .h3 {
  margin-top: 3rem;
}

.max-width {
  max-width: 600px;
  margin: 0 auto;
  padding: 2rem;
}

.flex-split {
  display: flex;
}

.flex-split > * {
  flex: 1;
}

.flat-bg {
  background-color: var(--dark-color);
}

.logo-container {
  align-self: center;
  text-align: right;
}

.dz-logomark--header {
  width: 100%;
  max-width: 12rem;
  fill: currentcolor;
  filter: drop-shadow(.75rem .5rem 0 var(--accent-color));
}

.dz-logomark--footer {
  width: 100%;
  max-width: 6rem;
  fill: var(--light-color);
  opacity: .2;
  margin: auto;
}

.header {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.clouds:before,
.clouds:after {
  content: '';
  --image-width: 700px;
  background-image: url(clouds.png);
  background-size: var(--image-width) 100%;
  position: absolute;
  width: 100vw;
  left: 0;
  top: 50%;
  background-position: 0%;
  height: 50%;
  pointer-events: none;
  display: none;
}

.clouds:before {
  transform: translateY(-50%);
  animation: drift 120s linear infinite;
  opacity: .05;
  margin-top: -1rem;
}

.clouds:after {
  transform: translateY(-50%) scaleY(-1);
  animation: drift 210s -66s linear infinite;
  opacity: .1;
  margin-top: 1rem;
}

@keyframes drift {
  from { background-position: 0%;}
  to { background-position: calc(var(--image-width) * -1) ;}
}

.app {
  max-width: 400px;
  margin-right: 2rem;
}

.controls {
  display: flex;
  flex-direction: column-reverse;
}

.controls-usePostal {
  visibility: hidden;
  position: absolute;
}

.controls-label {
  color: var(--accent-color);
  font: inherit;
  background: transparent;
  border: 0;
  text-decoration: underline;
  margin-top: 0.5rem;
  padding: 0;
  cursor: pointer;
  font-size: .8rem;
  user-select: none;
}

.controls-usePostal ~ .controls-label:after {
  content: ' postal code';
}

.controls-usePostal:checked ~ .controls-label:after {
  content: ' geolocation';
}

.controls-inputWrapper {
  background: var(--light-color);
  border-radius: 3px;
  display: inline-flex;
  margin-top: 1rem;
  padding: 8px;
  align-self: flex-start;
}

.controls-input {
  background: transparent;
  color: var(--dark-color);
  border: 0;
  flex: 1;
  font: inherit;
  font-size: 1.2rem;
  padding: 0;
  width: 0;
  text-indent: 0.5rem;
  transition: 0.218s ease;
}

.controls-usePostal:checked ~ .controls-inputWrapper .controls-input {
  width: 12ch;
}

.controls-getFeed:after {
  content: 'Get the feed!';
}

@keyframes loading {
  0%, 100% { content: 'Please wait... \2581\2582\2583' }
  25% { content: 'Please wait... \2582\2583\2582' }
  50% { content: 'Please wait... \2583\2582\2581' }
  75% { content: 'Please wait... \2582\2581\2582' }
}

.controls.is-loading .controls-getFeed:after {
  animation: loading .5s linear infinite;
}

.controls.is-loading .controls-label,
.controls.is-complete .controls-label {
  visibility: hidden;
}

.controls.is-complete .controls-input {
  width: 12ch;
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.controls.is-complete .controls-getFeed:after {
  content: attr(data-feed);
}

.controls-copyMessage {
  display: none;
  margin-top: 0.5rem;
  font-size: 0.8rem;
}

.controls.is-complete .controls-copyMessage {
  display: block;
}

footer {
  padding-bottom: 4rem;
}

footer .a {
  display: block;
}

@media (max-width: 600px) {
  .h1 {
    font-size: 10vw;
  }

  .clouds:before,
  .clouds:after {
    display: none;
    animation: none;
  }

  .logo-container {
    display: none;
  }

  .flex-split {
    flex-direction: column;
  }
}